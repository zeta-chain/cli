[
  {
    "description": "New",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "verbose": {
          "type": "boolean",
          "summary": "Enable verbose logging"
        },
        "output": {
          "type": "string",
          "summary": "Specify custom output directory or name"
        },
        "project": {
          "type": "string",
          "summary": "Specify the example project to use and skip the prompt"
        }
      },
      "type": "object"
    },
    "name": "new",
    "title": "New"
  },
  {
    "description": "Create a new account",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "evm",
            "solana",
            "sui",
            "bitcoin",
            "ton"
          ],
          "summary": "Account type"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        }
      },
      "type": "object"
    },
    "name": "accounts_create",
    "title": "Accounts Create"
  },
  {
    "description": "Delete an existing account",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "evm",
            "solana",
            "sui",
            "bitcoin",
            "ton"
          ],
          "summary": "Account type"
        },
        "name": {
          "type": "string",
          "summary": "Account name"
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "name": "accounts_delete",
    "title": "Accounts Delete"
  },
  {
    "description": "Accounts Import",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "evm",
            "solana",
            "sui",
            "bitcoin",
            "ton"
          ],
          "summary": "Account type"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key in hex format"
        },
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic phrase"
        }
      },
      "type": "object"
    },
    "name": "accounts_import",
    "title": "Accounts Import"
  },
  {
    "description": "List all available accounts",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "json": {
          "type": "boolean",
          "summary": "Output in JSON format"
        }
      },
      "type": "object"
    },
    "name": "accounts_list",
    "title": "Accounts List"
  },
  {
    "description": "Show details of an existing account",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "evm",
            "solana",
            "sui",
            "bitcoin",
            "ton"
          ],
          "summary": "Account type"
        },
        "name": {
          "type": "string",
          "summary": "Account name"
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "name": "accounts_show",
    "title": "Accounts Show"
  },
  {
    "description": "Fetch native and ZETA token balances",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "evm": {
          "type": "string",
          "summary": "Fetch balances for a specific EVM address"
        },
        "solana": {
          "type": "string",
          "summary": "Fetch balances for a specific Solana address"
        },
        "bitcoin": {
          "type": "string",
          "summary": "Fetch balances for a specific Bitcoin address"
        },
        "sui": {
          "type": "string",
          "summary": "Fetch balances for a specific Sui address"
        },
        "ton": {
          "type": "string",
          "summary": "Fetch balances for a specific TON address"
        },
        "name": {
          "type": "string",
          "summary": "Account name"
        },
        "network": {
          "type": "string",
          "enum": [
            "mainnet",
            "testnet"
          ],
          "summary": "Network to use",
          "default": "testnet"
        },
        "json": {
          "type": "boolean",
          "summary": "Output balances as JSON"
        },
        "showZero": {
          "type": "boolean",
          "summary": "Include zero balances",
          "default": false
        }
      },
      "type": "object"
    },
    "name": "query_balances",
    "title": "Query Balances"
  },
  {
    "description": "Query Cctx",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "hash": {
          "type": "string",
          "summary": "Inbound transaction hash"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC endpoint",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public"
        },
        "delay": {
          "type": "string",
          "summary": "Delay between polling rounds in milliseconds",
          "default": "2000"
        },
        "timeout": {
          "type": "string",
          "summary": "Timeout duration in milliseconds (default: indefinite)",
          "default": "0"
        }
      },
      "type": "object",
      "required": [
        "hash"
      ]
    },
    "name": "query_cctx",
    "title": "Query Cctx"
  },
  {
    "description": "Query Fees",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "api": {
          "type": "string",
          "summary": "API endpoint URL",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC endpoint URL",
          "default": "https://zetachain-athens-evm.blockpi.network/v1/rpc/public"
        },
        "gasLimit": {
          "type": "string",
          "summary": "Gas limit for withdraw and call"
        },
        "json": {
          "type": "boolean",
          "summary": "Output results in JSON format"
        }
      },
      "type": "object"
    },
    "name": "query_fees",
    "title": "Query Fees"
  },
  {
    "description": "Query Tokens List",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "api": {
          "type": "string",
          "summary": "API endpoint URL",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public"
        },
        "json": {
          "type": "boolean",
          "summary": "Output tokens as JSON"
        },
        "columns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "enum": [
            "asset",
            "type",
            "decimals"
          ],
          "summary": "Additional columns to show (variadic: pass as space-separated values, not JSON array)",
          "default": []
        }
      },
      "type": "object"
    },
    "name": "query_tokens_list",
    "title": "Query Tokens List"
  },
  {
    "description": "Query Tokens Show",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "api": {
          "type": "string",
          "summary": "API endpoint URL",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public"
        },
        "symbol": {
          "type": "string",
          "summary": "Token symbol (e.g., POL.AMOY, USDC.BSC)"
        },
        "field": {
          "type": "string",
          "summary": "Return specific field value (for scripting). Use 'zrc20' as shorthand for 'zrc20_contract_address'"
        },
        "json": {
          "type": "boolean",
          "summary": "Output token as JSON"
        }
      },
      "type": "object",
      "required": [
        "symbol"
      ]
    },
    "name": "query_tokens_show",
    "title": "Query Tokens Show"
  },
  {
    "description": "Query Chains List",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "api": {
          "type": "string",
          "summary": "API endpoint URL",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public"
        },
        "json": {
          "type": "boolean",
          "summary": "Output chains as JSON"
        }
      },
      "type": "object"
    },
    "name": "query_chains_list",
    "title": "Query Chains List"
  },
  {
    "description": "Query Chains Show",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "apiTestnet": {
          "type": "string",
          "summary": "Testnet API endpoint URL",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public"
        },
        "apiMainnet": {
          "type": "string",
          "summary": "Mainnet API endpoint URL",
          "default": "https://zetachain.blockpi.network/lcd/v1/public"
        },
        "chainName": {
          "type": "string",
          "summary": "Chain name"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID"
        },
        "field": {
          "type": "string",
          "summary": "Return specific field value (for scripting)"
        },
        "json": {
          "type": "boolean",
          "summary": "Output chain as JSON"
        }
      },
      "type": "object"
    },
    "name": "query_chains_show",
    "title": "Query Chains Show"
  },
  {
    "description": "Faucet",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "type": "string",
          "summary": "Recipient address."
        },
        "name": {
          "type": "string",
          "summary": "Account name to use if address not provided",
          "default": "default"
        }
      },
      "type": "object"
    },
    "name": "faucet",
    "title": "Faucet"
  },
  {
    "description": "Call a contract on a connected chain from ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "zrc20": {
          "type": "string",
          "summary": "The address of ZRC-20 to pay fees"
        },
        "receiver": {
          "type": "string",
          "summary": "The address of the receiver contract on a connected chain. Non-hex strings will be automatically encoded to hex."
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for signing transactions"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC URL of the network"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway contract address on ZetaChain"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Abort address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Whether to call on revert",
          "default": false
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "Gas limit for the revert transaction",
          "default": "1000000"
        },
        "revertMessage": {
          "type": "string",
          "summary": "Revert message",
          "default": "0x"
        },
        "txOptionsGasLimit": {
          "type": "string",
          "summary": "Gas limit for the transaction",
          "default": "1000000"
        },
        "txOptionsGasPrice": {
          "type": "string",
          "summary": "Gas price for the transaction",
          "default": "10000000000"
        },
        "callOptionsGasLimit": {
          "type": "string",
          "summary": "Gas limit for the call",
          "default": "1000000"
        },
        "callOptionsIsArbitraryCall": {
          "type": "boolean",
          "summary": "Call any function",
          "default": false
        },
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "function": {
          "type": "string",
          "summary": "Function to call (example: \"hello(string)\")"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        },
        "data": {
          "type": "string",
          "summary": "Raw data for non-EVM chains like Solana"
        }
      },
      "type": "object",
      "required": [
        "zrc20",
        "receiver"
      ]
    },
    "name": "zetachain_call",
    "title": "Zetachain Call"
  },
  {
    "description": "Withdraw tokens from ZetaChain to a connected chain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "zrc20": {
          "type": "string",
          "summary": "The address of ZRC-20 to pay fees"
        },
        "receiver": {
          "type": "string",
          "summary": "The address of the receiver contract on a connected chain. Non-hex strings will be automatically encoded to hex."
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for signing transactions"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC URL of the network"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway contract address on ZetaChain"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Abort address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Whether to call on revert",
          "default": false
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "Gas limit for the revert transaction",
          "default": "1000000"
        },
        "revertMessage": {
          "type": "string",
          "summary": "Revert message",
          "default": "0x"
        },
        "txOptionsGasLimit": {
          "type": "string",
          "summary": "Gas limit for the transaction",
          "default": "1000000"
        },
        "txOptionsGasPrice": {
          "type": "string",
          "summary": "Gas price for the transaction",
          "default": "10000000000"
        },
        "callOptionsGasLimit": {
          "type": "string",
          "summary": "Gas limit for the call",
          "default": "1000000"
        },
        "callOptionsIsArbitraryCall": {
          "type": "boolean",
          "summary": "Call any function",
          "default": false
        },
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "amount": {
          "type": "string",
          "summary": "The amount of tokens to withdraw"
        }
      },
      "type": "object",
      "required": [
        "zrc20",
        "receiver",
        "amount"
      ]
    },
    "name": "zetachain_withdraw",
    "title": "Zetachain Withdraw"
  },
  {
    "description": "Withdraw tokens from ZetaChain and call a contract on a connected chain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "zrc20": {
          "type": "string",
          "summary": "The address of ZRC-20 to pay fees"
        },
        "receiver": {
          "type": "string",
          "summary": "The address of the receiver contract on a connected chain. Non-hex strings will be automatically encoded to hex."
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for signing transactions"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC URL of the network"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway contract address on ZetaChain"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Abort address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Whether to call on revert",
          "default": false
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "Gas limit for the revert transaction",
          "default": "1000000"
        },
        "revertMessage": {
          "type": "string",
          "summary": "Revert message",
          "default": "0x"
        },
        "txOptionsGasLimit": {
          "type": "string",
          "summary": "Gas limit for the transaction",
          "default": "1000000"
        },
        "txOptionsGasPrice": {
          "type": "string",
          "summary": "Gas price for the transaction",
          "default": "10000000000"
        },
        "callOptionsGasLimit": {
          "type": "string",
          "summary": "Gas limit for the call",
          "default": "1000000"
        },
        "callOptionsIsArbitraryCall": {
          "type": "boolean",
          "summary": "Call any function",
          "default": false
        },
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "amount": {
          "type": "string",
          "summary": "The amount of tokens to withdraw"
        },
        "function": {
          "type": "string",
          "summary": "Function to call (example: \"hello(string)\")"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        },
        "data": {
          "type": "string",
          "summary": "Raw data for non-EVM chains like Solana"
        }
      },
      "type": "object",
      "required": [
        "zrc20",
        "receiver",
        "amount"
      ]
    },
    "name": "zetachain_withdraw-and-call",
    "title": "Zetachain Withdraw-and-call"
  },
  {
    "description": "Call a contract on ZetaChain from an EVM-compatible chain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address on ZetaChain"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for signing transactions"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC URL for the source chain"
        },
        "gateway": {
          "type": "string",
          "summary": "EVM Gateway address"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Address to revert to in case of failure (default: signer address)"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Address to receive funds if aborted",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Whether to call revert address on failure",
          "default": false
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "Gas limit for revert operation",
          "default": "200000"
        },
        "revertMessage": {
          "type": "string",
          "summary": "Message to include in revert",
          "default": ""
        },
        "gasLimit": {
          "type": "string",
          "summary": "Gas limit for the transaction"
        },
        "gasPrice": {
          "type": "string",
          "summary": "Gas price for the transaction"
        },
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "types",
        "values"
      ]
    },
    "name": "evm_call",
    "title": "Evm Call"
  },
  {
    "description": "Deposit tokens and call a contract on ZetaChain from an EVM-compatible chain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address on ZetaChain"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for signing transactions"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC URL for the source chain"
        },
        "gateway": {
          "type": "string",
          "summary": "EVM Gateway address"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Address to revert to in case of failure (default: signer address)"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Address to receive funds if aborted",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Whether to call revert address on failure",
          "default": false
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "Gas limit for revert operation",
          "default": "200000"
        },
        "revertMessage": {
          "type": "string",
          "summary": "Message to include in revert",
          "default": ""
        },
        "gasLimit": {
          "type": "string",
          "summary": "Gas limit for the transaction"
        },
        "gasPrice": {
          "type": "string",
          "summary": "Gas price for the transaction"
        },
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "amount": {
          "type": "string",
          "summary": "Amount of tokens to deposit"
        },
        "erc20": {
          "type": "string",
          "summary": "ERC20 token address (optional for native token deposits)"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "amount",
        "types",
        "values"
      ]
    },
    "name": "evm_deposit-and-call",
    "title": "Evm Deposit-and-call"
  },
  {
    "description": "Deposit tokens to ZetaChain from an EVM-compatible chain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address on ZetaChain"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for signing transactions"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC URL for the source chain"
        },
        "gateway": {
          "type": "string",
          "summary": "EVM Gateway address"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Address to revert to in case of failure (default: signer address)"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Address to receive funds if aborted",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Whether to call revert address on failure",
          "default": false
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "Gas limit for revert operation",
          "default": "200000"
        },
        "revertMessage": {
          "type": "string",
          "summary": "Message to include in revert",
          "default": ""
        },
        "gasLimit": {
          "type": "string",
          "summary": "Gas limit for the transaction"
        },
        "gasPrice": {
          "type": "string",
          "summary": "Gas price for the transaction"
        },
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "amount": {
          "type": "string",
          "summary": "Amount of tokens to deposit"
        },
        "erc20": {
          "type": "string",
          "summary": "ERC20 token address (optional for native token deposits)"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "amount"
      ]
    },
    "name": "evm_deposit",
    "title": "Evm Deposit"
  },
  {
    "description": "Solana Call",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "recipient": {
          "type": "string",
          "summary": "EOA or contract address on ZetaChain"
        },
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic"
        },
        "name": {
          "type": "string",
          "summary": "Name of the wallet",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key in base58 or hex format (with optional 0x prefix)"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Abort address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Call on revert",
          "default": false
        },
        "revertMessage": {
          "type": "string",
          "summary": "Revert message",
          "default": ""
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "On revert gas limit",
          "default": "0"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "recipient",
        "chainId",
        "types",
        "values"
      ]
    },
    "name": "solana_call",
    "title": "Solana Call"
  },
  {
    "description": "Solana Deposit-and-call",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "recipient": {
          "type": "string",
          "summary": "EOA or contract address on ZetaChain"
        },
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic"
        },
        "name": {
          "type": "string",
          "summary": "Name of the wallet",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key in base58 or hex format (with optional 0x prefix)"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Abort address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Call on revert",
          "default": false
        },
        "revertMessage": {
          "type": "string",
          "summary": "Revert message",
          "default": ""
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "On revert gas limit",
          "default": "0"
        },
        "amount": {
          "type": "string",
          "summary": "Amount of tokens to deposit"
        },
        "tokenProgram": {
          "type": "string",
          "summary": "Token program",
          "default": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        },
        "mint": {
          "type": "string",
          "summary": "SPL token mint address"
        }
      },
      "type": "object",
      "required": [
        "recipient",
        "chainId",
        "amount",
        "types",
        "values"
      ]
    },
    "name": "solana_deposit-and-call",
    "title": "Solana Deposit-and-call"
  },
  {
    "description": "Deposit tokens from Solana",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "recipient": {
          "type": "string",
          "summary": "EOA or contract address on ZetaChain"
        },
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic"
        },
        "name": {
          "type": "string",
          "summary": "Name of the wallet",
          "default": "default"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key in base58 or hex format (with optional 0x prefix)"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID of the network"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address"
        },
        "abortAddress": {
          "type": "string",
          "summary": "Abort address",
          "default": "0x0000000000000000000000000000000000000000"
        },
        "callOnRevert": {
          "type": "boolean",
          "summary": "Call on revert",
          "default": false
        },
        "revertMessage": {
          "type": "string",
          "summary": "Revert message",
          "default": ""
        },
        "onRevertGasLimit": {
          "type": "string",
          "summary": "On revert gas limit",
          "default": "0"
        },
        "amount": {
          "type": "string",
          "summary": "Amount of tokens to deposit"
        },
        "tokenProgram": {
          "type": "string",
          "summary": "Token program",
          "default": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        "mint": {
          "type": "string",
          "summary": "SPL token mint address"
        }
      },
      "type": "object",
      "required": [
        "recipient",
        "chainId",
        "amount"
      ]
    },
    "name": "solana_deposit",
    "title": "Solana Deposit"
  },
  {
    "description": "Encode payload data for Solana",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "connected": {
          "type": "string",
          "summary": "Connected PDA account address"
        },
        "data": {
          "type": "string",
          "summary": "Data to encode"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway program address"
        },
        "mint": {
          "type": "string",
          "summary": "Mint address for SPL token operations"
        },
        "accounts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Additional accounts in format 'address:isWritable' (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "connected",
        "data",
        "gateway"
      ]
    },
    "name": "solana_encode",
    "title": "Solana Encode"
  },
  {
    "description": "Deposit tokens from Sui and call a contract on ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic for the account"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for the account"
        },
        "gatewayObject": {
          "type": "string",
          "summary": "Gateway object ID"
        },
        "gatewayPackage": {
          "type": "string",
          "summary": "Gateway package ID"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address on ZetaChain"
        },
        "amount": {
          "type": "string",
          "summary": "Amount to deposit in decimal format"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID"
        },
        "coinType": {
          "type": "string",
          "summary": "Coin type to deposit",
          "default": "0x2::sui::SUI"
        },
        "gasBudget": {
          "type": "string",
          "summary": "Gas budget in MIST",
          "default": "10000000"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "decimals": {
          "type": "string",
          "summary": "Number of decimals for the coin type",
          "default": "9"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Parameter values for the function call (variadic: pass as space-separated values, not JSON array)"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "List of parameter types (e.g. uint256 address) (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "amount",
        "chainId"
      ]
    },
    "name": "sui_deposit-and-call",
    "title": "Sui Deposit-and-call"
  },
  {
    "description": "Deposit tokens from Sui",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic for the account"
        },
        "privateKey": {
          "type": "string",
          "summary": "Private key for the account"
        },
        "gatewayObject": {
          "type": "string",
          "summary": "Gateway object ID"
        },
        "gatewayPackage": {
          "type": "string",
          "summary": "Gateway package ID"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address on ZetaChain"
        },
        "amount": {
          "type": "string",
          "summary": "Amount to deposit in decimal format"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID"
        },
        "coinType": {
          "type": "string",
          "summary": "Coin type to deposit",
          "default": "0x2::sui::SUI"
        },
        "gasBudget": {
          "type": "string",
          "summary": "Gas budget in MIST",
          "default": "10000000"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "decimals": {
          "type": "string",
          "summary": "Number of decimals for the coin type",
          "default": "9"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "amount",
        "chainId"
      ]
    },
    "name": "sui_deposit",
    "title": "Sui Deposit"
  },
  {
    "description": "Encode payload data for SUI",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "string",
          "summary": "Data to encode"
        },
        "typeArguments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Type arguments for the encoding (variadic: pass as space-separated values, not JSON array)"
        },
        "objects": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Objects to include in the encoding (comma-separated) (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "data"
      ]
    },
    "name": "sui_encode",
    "title": "Sui Encode"
  },
  {
    "description": "Ton Deposit-and-call",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic for the account"
        },
        "name": {
          "type": "string",
          "summary": "Name of the account",
          "default": "default"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway contract address (default: testnet)"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC endpoint (default: testnet)",
          "default": "https://testnet.toncenter.com/api/v2/jsonRPC"
        },
        "apiKey": {
          "type": "string",
          "summary": "API key"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID"
        },
        "amount": {
          "type": "string",
          "summary": "Amount in TON"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "ABI types (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Values corresponding to types (variadic: pass as space-separated values, not JSON array)"
        },
        "data": {
          "type": "string",
          "summary": "Data to call the contract with"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "chainId",
        "amount"
      ]
    },
    "name": "ton_deposit-and-call",
    "title": "Ton Deposit-and-call"
  },
  {
    "description": "Ton Deposit",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "mnemonic": {
          "type": "string",
          "summary": "Mnemonic for the account"
        },
        "name": {
          "type": "string",
          "summary": "Name of the account",
          "default": "default"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway contract address (default: testnet)"
        },
        "receiver": {
          "type": "string",
          "summary": "Receiver address"
        },
        "rpc": {
          "type": "string",
          "summary": "RPC endpoint (default: testnet)",
          "default": "https://testnet.toncenter.com/api/v2/jsonRPC"
        },
        "apiKey": {
          "type": "string",
          "summary": "API key"
        },
        "chainId": {
          "type": "string",
          "summary": "Chain ID"
        },
        "amount": {
          "type": "string",
          "summary": "Amount in TON"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "chainId",
        "amount"
      ]
    },
    "name": "ton_deposit",
    "title": "Ton Deposit"
  },
  {
    "description": "Call a contract on ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "receiver": {
          "type": "string",
          "summary": "ZetaChain receiver address"
        },
        "commitFee": {
          "type": "string",
          "summary": "Commit fee (in sats)",
          "default": "15000"
        },
        "gateway": {
          "type": "string",
          "summary": "Bitcoin gateway (TSS) address",
          "default": "tb1qy9pqmk2pd9sv63g27jt8r657wy0d9ueeh0nqur"
        },
        "privateKey": {
          "type": "string",
          "summary": "Bitcoin private key"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address"
        },
        "network": {
          "type": "string",
          "enum": [
            "signet",
            "mainnet"
          ],
          "summary": "Network",
          "default": "signet"
        },
        "format": {
          "type": "string",
          "enum": [
            "ABI",
            "CompactLong",
            "CompactShort"
          ],
          "summary": "Encoding format",
          "default": "ABI"
        },
        "data": {
          "type": "string",
          "summary": "Pass raw data"
        },
        "bitcoinApi": {
          "type": "string",
          "summary": "Bitcoin API",
          "default": "https://mempool.space/signet/api"
        },
        "gasPriceApi": {
          "type": "string",
          "summary": "ZetaChain API",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public/zeta-chain/crosschain/gasPrice/18333"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "ABI types (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Values corresponding to types (variadic: pass as space-separated values, not JSON array)"
        }
      },
      "type": "object",
      "required": [
        "gateway"
      ]
    },
    "name": "bitcoin_inscription_call",
    "title": "Bitcoin Inscription Call"
  },
  {
    "description": "Deposit BTC and call a contract on ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "receiver": {
          "type": "string",
          "summary": "ZetaChain receiver address"
        },
        "commitFee": {
          "type": "string",
          "summary": "Commit fee (in sats)",
          "default": "15000"
        },
        "gateway": {
          "type": "string",
          "summary": "Bitcoin gateway (TSS) address",
          "default": "tb1qy9pqmk2pd9sv63g27jt8r657wy0d9ueeh0nqur"
        },
        "privateKey": {
          "type": "string",
          "summary": "Bitcoin private key"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address"
        },
        "network": {
          "type": "string",
          "enum": [
            "signet",
            "mainnet"
          ],
          "summary": "Network",
          "default": "signet"
        },
        "format": {
          "type": "string",
          "enum": [
            "ABI",
            "CompactLong",
            "CompactShort"
          ],
          "summary": "Encoding format",
          "default": "ABI"
        },
        "data": {
          "type": "string",
          "summary": "Pass raw data"
        },
        "bitcoinApi": {
          "type": "string",
          "summary": "Bitcoin API",
          "default": "https://mempool.space/signet/api"
        },
        "gasPriceApi": {
          "type": "string",
          "summary": "ZetaChain API",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public/zeta-chain/crosschain/gasPrice/18333"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "ABI types (variadic: pass as space-separated values, not JSON array)"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Values corresponding to types (variadic: pass as space-separated values, not JSON array)"
        },
        "amount": {
          "type": "string",
          "summary": "BTC amount to send (in BTC)"
        }
      },
      "type": "object",
      "required": [
        "gateway",
        "amount"
      ]
    },
    "name": "bitcoin_inscription_deposit-and-call",
    "title": "Bitcoin Inscription Deposit-and-call"
  },
  {
    "description": "Deposit BTC to ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "receiver": {
          "type": "string",
          "summary": "ZetaChain receiver address"
        },
        "commitFee": {
          "type": "string",
          "summary": "Commit fee (in sats)",
          "default": "15000"
        },
        "gateway": {
          "type": "string",
          "summary": "Bitcoin gateway (TSS) address",
          "default": "tb1qy9pqmk2pd9sv63g27jt8r657wy0d9ueeh0nqur"
        },
        "privateKey": {
          "type": "string",
          "summary": "Bitcoin private key"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "revertAddress": {
          "type": "string",
          "summary": "Revert address"
        },
        "network": {
          "type": "string",
          "enum": [
            "signet",
            "mainnet"
          ],
          "summary": "Network",
          "default": "signet"
        },
        "format": {
          "type": "string",
          "enum": [
            "ABI",
            "CompactLong",
            "CompactShort"
          ],
          "summary": "Encoding format",
          "default": "ABI"
        },
        "data": {
          "type": "string",
          "summary": "Pass raw data"
        },
        "bitcoinApi": {
          "type": "string",
          "summary": "Bitcoin API",
          "default": "https://mempool.space/signet/api"
        },
        "gasPriceApi": {
          "type": "string",
          "summary": "ZetaChain API",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public/zeta-chain/crosschain/gasPrice/18333"
        },
        "amount": {
          "type": "string",
          "summary": "BTC amount to send (in BTC)"
        }
      },
      "type": "object",
      "required": [
        "gateway",
        "amount"
      ]
    },
    "name": "bitcoin_inscription_deposit",
    "title": "Bitcoin Inscription Deposit"
  },
  {
    "description": "Encode data for Bitcoin transactions using ABI encoding",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "receiver": {
          "type": "string",
          "summary": "Receiver address"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "ABI types (e.g. string uint256) (variadic: pass as space-separated values, not JSON array)",
          "default": []
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "summary": "Values corresponding to types (variadic: pass as space-separated values, not JSON array)",
          "default": []
        },
        "revertAddress": {
          "type": "string",
          "summary": "Bitcoin revert address"
        },
        "opCode": {
          "type": "string",
          "enum": [
            "Call",
            "Deposit",
            "DepositAndCall",
            "Invalid"
          ],
          "summary": "Operation code",
          "default": "DepositAndCall"
        },
        "format": {
          "type": "string",
          "enum": [
            "ABI",
            "CompactLong",
            "CompactShort"
          ],
          "summary": "Encoding format",
          "default": "ABI"
        }
      },
      "type": "object",
      "required": [
        "receiver",
        "revertAddress"
      ]
    },
    "name": "bitcoin_inscription_encode",
    "title": "Bitcoin Inscription Encode"
  },
  {
    "description": "Call a contract on ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "receiver": {
          "type": "string",
          "summary": "ZetaChain receiver address"
        },
        "commitFee": {
          "type": "string",
          "summary": "Commit fee (in sats)",
          "default": "15000"
        },
        "gateway": {
          "type": "string",
          "summary": "Bitcoin gateway (TSS) address",
          "default": "tb1qy9pqmk2pd9sv63g27jt8r657wy0d9ueeh0nqur"
        },
        "privateKey": {
          "type": "string",
          "summary": "Bitcoin private key"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "data": {
          "type": "string",
          "summary": "Pass raw data"
        },
        "networkFee": {
          "type": "string",
          "summary": "Network fee (in sats)",
          "default": "1750"
        },
        "network": {
          "type": "string",
          "enum": [
            "signet",
            "mainnet"
          ],
          "summary": "Network",
          "default": "signet"
        },
        "bitcoinApi": {
          "type": "string",
          "summary": "Bitcoin API",
          "default": "https://mempool.space/signet/api"
        },
        "gasPriceApi": {
          "type": "string",
          "summary": "ZetaChain API",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public/zeta-chain/crosschain/gasPrice/18333"
        }
      },
      "type": "object",
      "required": [
        "gateway"
      ]
    },
    "name": "bitcoin_memo_call",
    "title": "Bitcoin Memo Call"
  },
  {
    "description": "Deposit BTC and call a contract on ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "receiver": {
          "type": "string",
          "summary": "ZetaChain receiver address"
        },
        "commitFee": {
          "type": "string",
          "summary": "Commit fee (in sats)",
          "default": "15000"
        },
        "gateway": {
          "type": "string",
          "summary": "Bitcoin gateway (TSS) address",
          "default": "tb1qy9pqmk2pd9sv63g27jt8r657wy0d9ueeh0nqur"
        },
        "privateKey": {
          "type": "string",
          "summary": "Bitcoin private key"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "data": {
          "type": "string",
          "summary": "Pass raw data"
        },
        "networkFee": {
          "type": "string",
          "summary": "Network fee (in sats)",
          "default": "1750"
        },
        "network": {
          "type": "string",
          "enum": [
            "signet",
            "mainnet"
          ],
          "summary": "Network",
          "default": "signet"
        },
        "bitcoinApi": {
          "type": "string",
          "summary": "Bitcoin API",
          "default": "https://mempool.space/signet/api"
        },
        "gasPriceApi": {
          "type": "string",
          "summary": "ZetaChain API",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public/zeta-chain/crosschain/gasPrice/18333"
        },
        "amount": {
          "type": "string",
          "summary": "BTC amount to send (in BTC)"
        }
      },
      "type": "object",
      "required": [
        "gateway",
        "amount"
      ]
    },
    "name": "bitcoin_memo_deposit-and-call",
    "title": "Bitcoin Memo Deposit-and-call"
  },
  {
    "description": "Deposit BTC to ZetaChain",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "yes": {
          "type": "boolean",
          "summary": "Skip confirmation prompt",
          "default": false
        },
        "receiver": {
          "type": "string",
          "summary": "ZetaChain receiver address"
        },
        "commitFee": {
          "type": "string",
          "summary": "Commit fee (in sats)",
          "default": "15000"
        },
        "gateway": {
          "type": "string",
          "summary": "Bitcoin gateway (TSS) address",
          "default": "tb1qy9pqmk2pd9sv63g27jt8r657wy0d9ueeh0nqur"
        },
        "privateKey": {
          "type": "string",
          "summary": "Bitcoin private key"
        },
        "name": {
          "type": "string",
          "summary": "Account name",
          "default": "default"
        },
        "data": {
          "type": "string",
          "summary": "Pass raw data"
        },
        "networkFee": {
          "type": "string",
          "summary": "Network fee (in sats)",
          "default": "1750"
        },
        "network": {
          "type": "string",
          "enum": [
            "signet",
            "mainnet"
          ],
          "summary": "Network",
          "default": "signet"
        },
        "bitcoinApi": {
          "type": "string",
          "summary": "Bitcoin API",
          "default": "https://mempool.space/signet/api"
        },
        "gasPriceApi": {
          "type": "string",
          "summary": "ZetaChain API",
          "default": "https://zetachain-athens.blockpi.network/lcd/v1/public/zeta-chain/crosschain/gasPrice/18333"
        },
        "amount": {
          "type": "string",
          "summary": "BTC amount to send (in BTC)"
        }
      },
      "type": "object",
      "required": [
        "gateway",
        "amount"
      ]
    },
    "name": "bitcoin_memo_deposit",
    "title": "Bitcoin Memo Deposit"
  },
  {
    "description": "Localnet Start",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "port": {
          "type": "string",
          "summary": "Port to run anvil on",
          "default": "8545"
        },
        "anvil": {
          "type": "string",
          "summary": "Additional arguments to pass to anvil",
          "default": "-q"
        },
        "forceKill": {
          "type": "boolean",
          "summary": "Force kill any process on the port without prompting",
          "default": false
        },
        "stopAfterInit": {
          "type": "boolean",
          "summary": "Stop the localnet after successful initialization",
          "default": false
        },
        "exitOnError": {
          "type": "boolean",
          "summary": "Exit with an error if a call is reverted",
          "default": false
        },
        "verbosity": {
          "type": "string",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "error",
            "warning",
            "notice",
            "info",
            "debug"
          ],
          "summary": "Logger verbosity level",
          "default": "info"
        },
        "chains": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "enum": [
            "ton",
            "solana",
            "sui"
          ],
          "summary": "Chains to launch when starting localnet (variadic: pass as space-separated values, not JSON array)",
          "default": []
        }
      },
      "type": "object"
    },
    "name": "localnet_start",
    "title": "Localnet Start"
  },
  {
    "description": "Localnet Stop",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {},
      "type": "object"
    },
    "name": "localnet_stop",
    "title": "Localnet Stop"
  },
  {
    "description": "Localnet Check",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "delay": {
          "type": "string",
          "summary": "Seconds to wait before checking localnet",
          "default": "3"
        }
      },
      "type": "object"
    },
    "name": "localnet_check",
    "title": "Localnet Check"
  },
  {
    "description": "Localnet Ton Balance",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "type": "string",
          "summary": "Address"
        }
      },
      "type": "object",
      "required": [
        "address"
      ]
    },
    "name": "localnet_ton_balance",
    "title": "Localnet Ton Balance"
  },
  {
    "description": "Localnet Ton Faucet",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "type": "string",
          "summary": "Address"
        },
        "amount": {
          "type": "string",
          "summary": "Amount in TON",
          "default": "100"
        }
      },
      "type": "object",
      "required": [
        "address"
      ]
    },
    "name": "localnet_ton_faucet",
    "title": "Localnet Ton Faucet"
  },
  {
    "description": "Localnet Ton Wallet",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "amount": {
          "type": "string",
          "summary": "Amount to topup in TON",
          "default": "100"
        }
      },
      "type": "object"
    },
    "name": "localnet_ton_wallet",
    "title": "Localnet Ton Wallet"
  },
  {
    "description": "Localnet Ton Withdraw",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "type": "string",
          "summary": "Recipient"
        },
        "amount": {
          "type": "string",
          "summary": "Amount in TON",
          "default": "1"
        },
        "privateKey": {
          "type": "string",
          "summary": "Sender's private key on Zeta"
        },
        "gateway": {
          "type": "string",
          "summary": "Gateway address on ZEVM"
        },
        "token": {
          "type": "string",
          "summary": "TON.TON token address on ZEVM"
        },
        "port": {
          "type": "string",
          "summary": "Anvil port",
          "default": "8545"
        }
      },
      "type": "object",
      "required": [
        "address",
        "privateKey",
        "gateway",
        "token"
      ]
    },
    "name": "localnet_ton_withdraw",
    "title": "Localnet Ton Withdraw"
  },
  {
    "description": "Mcp Install",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "client": {
          "type": "string",
          "enum": [
            "claude",
            "cursor"
          ],
          "summary": "AI client to install for"
        }
      },
      "type": "object",
      "required": [
        "client"
      ]
    },
    "name": "mcp_install",
    "title": "Mcp Install"
  },
  {
    "description": "Mcp Remove",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "client": {
          "type": "string",
          "enum": [
            "claude",
            "cursor"
          ],
          "summary": "AI client to remove from"
        }
      },
      "type": "object",
      "required": [
        "client"
      ]
    },
    "name": "mcp_remove",
    "title": "Mcp Remove"
  },
  {
    "description": "Mcp List",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {},
      "type": "object"
    },
    "name": "mcp_list",
    "title": "Mcp List"
  },
  {
    "description": "Docs",
    "inputSchema": {
      "additionalProperties": false,
      "properties": {
        "json": {
          "type": "boolean",
          "summary": "Output documentation as JSON (tools schema)"
        }
      },
      "type": "object"
    },
    "name": "docs",
    "title": "Docs"
  }
]
